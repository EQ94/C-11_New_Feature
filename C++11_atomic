C++11原子操作（atomic operation）

所谓的原子操作，取得就是“原子是最小的，不可分割的最小个体”的一样。它表示在多个线程访问同一个全局资源的时候，能够确保所有其他的线程都不在同一时间内访问相同的资源。也就是他确保了在同一时刻只有唯一的线程对这个资源进行访问。这有点类似互斥对象对共享资源的访问的保护，但是原子操作更加接近底层，因为效率更高。

在C++11新标准中，引入了原子操作的概念。通过新的头文件#include<atomic>提供了多种原子操作数据类型，例如，atomic_bool，atomic_int等等，如果我们在多个线程中对这些类型的共享资源进行操作，编译器将保证这些操作都是原子性的。也就是说，确保任意时刻只有一个线程对这个资源进行访问，编译器将保证多个线程访问这个共享资源的正确想。从而避免了锁的使用，提高了效率。
